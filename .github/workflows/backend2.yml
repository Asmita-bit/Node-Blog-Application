name: Build and Push Backend2 Image

# on:
#   push:
#     branches: [dev]
#     paths:
#       - 'code/backend1/**'
#       - 'code/backend2/**'
#   pull_request:
#     branches: [dev]
#     paths:
#       - 'code/backend1/**'
#       - 'code/backend2/**'

on:
  pull_request:
    branches: ["dev"]
  push:
    branches:
      - dev

env:
  REGISTRY: docker.io
  BACKEND2_IMAGE_NAME: asmita071/backend2

jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature') && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Commitlint
        run: |
          npm install --save-dev @commitlint/cli @commitlint/config-conventional
      - name: Add commitlint config
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
      - name: Run Commitlint
        run: |
          git log origin/${{ github.base_ref }}..HEAD --pretty=format:"%s" | npx commitlint

  lint_backend2:
    runs-on: ubuntu-latest
    needs: commitlint
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature') && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      - name: Lint Backend2
        working-directory: ./code/backend2
        run: yarn && yarn lint

  build_push_backend2:
    name: Build & Push Backend2 Image
    runs-on: [self-hosted, backend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ./code/backend1/node_modules
          key: backend1-cache-${{ hashFiles('code/backend1/yarn.lock') }}
          restore-keys: backend1-cache-${{ hashFiles('code/backend1/yarn.lock') }}

      - name: Install Dependencies (Only if not cached)
        working-directory: ./code/backend1
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Backend2 Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend2
          file: ./code/backend2/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:$${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:$latest
